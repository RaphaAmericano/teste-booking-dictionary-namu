// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// generator seed {
//   provider = "ts-node ./src/infrastructure/database/prisma/seed/seed.ts"
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String     @id @default(uuid())
  name       String
  created_at DateTime   @default(now())
  updated_at DateTime   @default(now())
  auth       Auth?
  Favorite   Favorite[]
  History    History[]
}

model Auth {
  id         String   @id @default(uuid())
  password   String
  email      String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String   @unique
}

model Word {
  id        String     @id @default(uuid())
  word      String
  phonetic  String?
  origin    String?
  phonetics Phonetic[]
  meanings  Meaning[]
  Favorite  Favorite[]
  History   History[]
}

model Phonetic {
  id      String  @id @default(uuid())
  text    String
  audio   String?
  word_id String
  word    Word    @relation(fields: [word_id], references: [id], onDelete: Cascade)

  @@unique([word_id, text])
}

model Meaning {
  id             String       @id @default(uuid())
  part_of_speech String
  word_id        String
  word           Word         @relation(fields: [word_id], references: [id], onDelete: Cascade)
  definitions    Definition[]

  @@unique([word_id, part_of_speech])
}

model Definition {
  id         String    @id @default(uuid())
  definition String
  example    String?
  synonyms   Synonym[]
  antonyms   Antonym[]
  meaning_id String
  meaning    Meaning   @relation(fields: [meaning_id], references: [id], onDelete: Cascade)
}

model Synonym {
  id            String     @id @default(uuid())
  synonym       String
  definition_id String
  definition    Definition @relation(fields: [definition_id], references: [id])
}

model Antonym {
  id            String     @id @default(uuid())
  antonym       String
  definition_id String
  definition    Definition @relation(fields: [definition_id], references: [id])
}

model Favorite {
  id      String @id @default(uuid())
  user_id String
  word_id String
  user    User   @relation(fields: [user_id], references: [id])
  word    Word   @relation(fields: [word_id], references: [id])
}

model History {
  id         String   @id @default(uuid())
  created_at DateTime @default(now())
  user_id    String
  word_id    String
  user       User     @relation(fields: [user_id], references: [id])
  word       Word     @relation(fields: [word_id], references: [id])
}
